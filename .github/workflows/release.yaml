name: Release Docker Image

on:
  release:
    types: [created]

env:
  TAG: ${{ github.event.release.tag_name }}

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: windows-latest
            platform: win32
            arch: arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: alpine
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Replace version in package.json
        shell: bash
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
            find . -name "package.json" -exec sed -i '' "s/\"version\": \".*\"/\"version\": \"${{ env.TAG }}\"/" {} +
          else
            find . -name "package.json" -exec sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.TAG }}\"/" {} +
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: npm install
        env:
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - run: npx @vscode/vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.target }}
          path: "*.vsix"

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_TOKEN }}

  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: "https://registry.npmjs.org/"
      - name: Replace version in package.json
        shell: bash
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
            find . -name "package.json" -exec sed -i '' "s/\"version\": \".*\"/\"version\": \"${{ env.TAG }}\"/" {} +
          else
            find . -name "package.json" -exec sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.TAG }}\"/" {} +
          fi
      - name: Replace lookml-language-server dependency version in lookml-validator package.json
        shell: bash
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
            find . -name "package.json" -exec sed -i '' "s/\"@lkr-dev\/lookml-language-server\": \".*\"/\"@lkr-dev\/lookml-language-server\": \"${{ env.TAG }}\"/" {} +
          else
            find . -name "package.json" -exec sed -i "s/\"@lkr-dev\/lookml-language-server\": \".*\"/\"@lkr-dev\/lookml-language-server\": \"${{ env.TAG }}\"/" {} +
      - name: Install dependencies (server)
        run: npm install --workspace=server
      - name: Install dependencies (lookml-validator)
        run: npm install --workspace=packages/lookml-validator
      - name: Build lookml-validator
        run: cd packages/lookml-validator && npm run build
      - name: Publish lookml-validator
        run: npm publish --workspace=packages/lookml-validator --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish lookml-language-server
        run: npm publish --workspace=server --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
